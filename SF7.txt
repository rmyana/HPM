with arcpy.da.UpdateCursor(parcels_OG, ['AREA', 'Max_Units', 'ZoningCode', 'area_sc', 'area_rem', 'area_cm', 'area_rs',
                                        'SF','TH','MF','SMH','DU','SD','TNH','PH','THQ', 'SF_MN', 'SF_MJ', 'lots', 'lotsXSC', 'FLU_MAP']) as cursor:
    for row in cursor:
        parcel_area = row[0]
        max_units = row[1]
        zoning_district = row[2]
        area_sc = row[3]
        area_rem = row[4]
        area_cm = row[5]
        area_rs = row[6]
        sf = row[7]
        th = row[8]
        mf = row[9]
        smh = row[10]
        du = row[11]
        sd = row[12]
        tnh = row[13]
        ph = row[14]
        thq = row[15]
        sf_mn = row[16]
        sf_mj = row[17]
        lots = row[18]
        lotsXSC = row[19]
        landuse = row[20]

	if zoning_district == "SF 7":
            # Apply zoning-specific calculations and constraints
            units = {}
            if parcel_area >= 653400:
                proportions = {
                    "Single Family": 0.60,
                    "Site Constraints": 0.40
                }
            else:
                proportions = {
                    "Single Family": 0.90,
                    "Site Constraints": 0.10
                }
            
            minimum_areas = {
                "Single Family": 7000
            }
            
            area = {
                "Single Family": parcel_area * proportions["Single Family"]
            }
            
            maxden = {
                "Single Family": max_units * proportions["Single Family"] + max_units * proportions["Site Constraints"]
            }
            units_tot = sum(maxden.values())
            if units_tot < max_units:
                units_rem = max_units - units_tot
                distri = sorted([(k, v) for k, v in proportions.items()
                                 if k != "Site Constraints"], key=lambda x: -x[1])
                for type_, _ in distri:
                    if units_rem == 0:
                        break
                    maxden[type_] += 1
                    units_rem -= 1
                        
            for type_, lotarea in minimum_areas.items():
                if type_ in area:
                    units[type_] = area[type_] // lotarea

                    if max_units == 0:
                        units[type_] = units[type_]
                    elif max_units != 0 and units[type_] >= maxden[type_]:
                        units[type_] = maxden[type_]
                    elif max_units != 0 and units[type_] < maxden[type_]:
                        units[type_] = units[type_]
                
            row[7] = units.get("Single Family", 0)
            
            # Apply Minor and Major Developments
            if parcel_area >= 43560 and parcel_area < 653400:
                lots = (parcel_area * 0.90) // 7000
                lotsXSC = parcel_area // 7000
                if lots <= 10:
                    sf_mn = lots
                    sf_mj = 0
                elif lots > 10:
                    sf_mj = lots
                    sf_mn = 0
                    
            elif parcel_area >= 653400:
                lots = (parcel_area * 0.60) // 7000
                lotsXSC = parcel_area // 7000
                if lots <= 10:
                    sf_mn = lots
                    sf_mj = 0
                elif lots > 10:
                    sf_mj = lots
                    sf_mn = 0
                    
            row[16] = sf_mn
            row[17] = sf_mj
            row[18] = lots
            row[19] = lotsXSC