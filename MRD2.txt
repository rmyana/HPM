with arcpy.da.UpdateCursor(parcel_data, ['AREA', 'Max_Units', 'ZoningCode', 'area_sc', 'area_rem',
                                         'SF','TH','MF','SMH','DU','SD','TNH','PH','THQ', 'SF_MN', 'SF_MJ', 'lots', 'lotsXSC']) as cursor:
    for row in cursor:
        parcel_area = row[0]
        max_units = row[1]
        zoning_districts = row[2]
        area_sc = row[3]
        area_rem = row[4]
        sf = row[5]
        th = row[6]
        mf = row[7]
        smh = row[8]
        du = row[9]
        sd = row[10]
        tnh = row[11]
        ph = row[12]
        thq = row[13]
        sf_mn = row[14]
        sf_mj = row[15]
        lots = row[16]
        lotsXSC = row[17]

	if "MRD2" in zoning_districts:
	    # Compare the density restrictions between FLUM and zoning district and choose whichever is smaller
            max_density = int(8 * (parcel_area / 43560))
            if max_units == 0:
                max_units = max_density
                row[1] = max_units
            elif max_units <= max_density:
                max_units = max_units
                row[1] = max_units
            elif max_units > max_density:
                max_units = max_density
                row[1] = max_units

            # Define the minimum lot areas
            minimum_areas = {
                "Single Family": 6000,  # sq ft
                "Duplex": 7000,         # sq ft
                "Semi-Detached": 3500,  # sq ft
                "Patiohome": 3500,     # sq ft
                "Townhouse": 1500,      # sq ft
                "Multi Family": 800,    # sq ft
                "Tiny Home": 1200       # sq ft
            }

            # Define the proportions
            if parcel_area >= 653400:  # 15 acres
                proportions = {
                    "Single Family": 0.15,
                    "Multi Family": 0.10,
                    "Townhouse": 0.05,
                    "Patiohome": 0.05,
                    "Tiny Home": 0.10,
                    "Duplex": 0.05,
                    "Semi-Detached": 0.10,
                    "Site Constraints": 0.40
                }
            else:
                proportions = {
                    "Single Family": 0.45,
                    "Multi Family": 0.10,
                    "Townhouse": 0.05,
                    "Patiohome": 0.05,
                    "Tiny Home": 0.10,
                    "Duplex": 0.05,
                    "Semi-Detached": 0.10,
                    "Site Constraints": 0.10
                }

	    # Define the maximum density for each housing type
            maxden = {
                "Single Family": max_units * proportions["Single Family"] + max_units * proportions["Site Constraints"],
                "Multi Family": max_units * proportions["Multi Family"],
                "Townhouse": max_units * proportions["Townhouse"],
                "Patiohome": max_units * proportions["Patiohome"],
                "Tiny Home": max_units * proportions["Tiny Home"],
                "Duplex": max_units * proportions["Duplex"],
                "Semi-Detached": max_units * proportions["Semi-Detached"]
            }
            units_tot = sum(maxden.values())
            if units_tot < max_units:
                units_rem = max_units - units_tot
                distri = sorted([(k, v) for k, v in proportions.items()
                                 if k != "Site Constraints"], key=lambda x: -x[1])
                for type_, _ in distri:
                    if units_rem == 0:
                        break
                    maxden[type_] += 1
                    units_rem -= 1
            
            # Remove the site constraints area and calculate the area for each housing type
            area_sc = parcel_area * proportions["Site Constraints"]
            area_rem = parcel_area - area_sc
            area = {
                "Single Family": parcel_area * proportions["Single Family"],
                "Multi Family": parcel_area * proportions["Multi Family"],
                "Townhouse": parcel_area * proportions["Townhouse"],
                "Patiohome": parcel_area * proportions["Patiohome"],
                "Tiny Home": parcel_area * proportions["Tiny Home"],
                "Duplex": parcel_area * proportions["Duplex"],
                "Semi-Detached": parcel_area * proportions["Semi-Detached"]
            }
            
            row[3] = area_sc  # site constraints area
            row[4] = area_rem  # remaining area # development area
            
            # Calculate the maximum units for each type
            units = {}

            for type_, lotarea in minimum_areas.items():
                if type_ in area:
                    units[type_] = area[type_] // lotarea
                    if type_ == "Semi-Detached":
                        units[type_] = units[type_] * 2
                        
                    if type_ == "Townhouse":
                        development_size = 21780
                    elif type_ == "Multi Family":
                        development_size = 32670
                        # Calculate max units based on development size
                        if parcel_area >= development_size:
                            units[type_] = area[type_] // lotarea
                        else:
                            units[type_] = 0
                 
                    if max_units == 0:
                        units[type_] = units[type_]
                    elif max_units != 0 and units[type_] >= maxden[type_]:
                        units[type_] = maxden[type_]
                    elif max_units != 0 and units[type_] < maxden[type_]:
                        units[type_] = units[type_]

            row[5] = units.get("Single Family", 0)
            row[7] = units.get("Multi Family", 0)
            row[6] = units.get("Townhouse", 0)
            row[12] = units.get("Patiohome", 0)
            row[11] = units.get("Tiny Home", 0)
            row[9] = units.get("Duplex", 0)
            row[10] = units.get("Semi-Detached", 0)
            
            # Apply Minor and Major Developments
            if parcel_area >= 43560 and parcel_area < 653400:  # 15 acres
                lots = (parcel_area * 0.90) // 6000  # 10% for site constraints
                lotsXSC = parcel_area // 6000
                if lots <= 10:
                    sf_mn = lots
                    sf_mj = 0
                elif lots > 10:
                    sf_mj = lots
                    sf_mn = 0
                    
            elif parcel_area >= 653400:  # 15 acres
                lots = (parcel_area * 0.60) // 6000  # 40% for site constraints
                lotsXSC = parcel_area // 6000
                if lots <= 10:
                    sf_mn = lots
                    sf_mj = 0
                elif lots > 10:
                    sf_mj = lots
                    sf_mn = 0
                    
            row[14] = sf_mn
            row[15] = sf_mj
            row[16] = lots
            row[17] = lotsXSC
